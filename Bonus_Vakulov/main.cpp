//Vakulov
//3/9/2017
#include "acomplex.h"
#include "tcomplex.h"
#include "UniCalc.h"
int main(){
	/*cout<<"===============DOUBLE=============="<<endl<<endl;
	UniCalc<Wrapper<double>,Wrapper<double>> a(1,2);
	cout<<a.getA()<<" + "<<a.getX()<<" = "<<a.doOp(operator+)<<endl;
	cout<<a.getA()<<" - "<<a.getX()<<" = "<<a.doOp(operator-)<<endl;
	cout<<a.getA()<<" * "<<a.getX()<<" = "<<a.doOp(operator*)<<endl;
	cout<<a.getA()<<" / "<<a.getX()<<" = "<<a.doOp(operator/)<<endl;
	cout<<endl;
	cout<<"===============INT=============="<<endl<<endl;
	UniCalc<Wrapper<int>,Wrapper<int>> b(10,20);
	cout<<b.getA()<<" + "<<b.getX()<<" = "<<b.doOp(operator+)<<endl;
	cout<<b.getA()<<" - "<<b.getX()<<" = "<<b.doOp(operator-)<<endl;
	cout<<b.getA()<<" * "<<b.getX()<<" = "<<b.doOp(operator*)<<endl;
	cout<<b.getA()<<" / "<<b.getX()<<" = "<<b.doOp(operator/)<<endl;
	cout<<endl;
	cout<<"===============ACOMPLEX=============="<<endl<<endl;
	AComplex acomp(1,1);
	AComplex bcomp(3,6);
	UniCalc<Wrapper<AComplex>,Wrapper<AComplex>> d(acomp,bcomp);
	cout<<d.getA()<<" + "<<d.getX()<<" = "<<d.doOp(operator+)<<endl;
	cout<<d.getA()<<" - "<<d.getX()<<" = "<<d.doOp(operator-)<<endl;
	cout<<d.getA()<<" * "<<d.getX()<<" = "<<d.doOp(operator*)<<endl;
	cout<<d.getA()<<" / "<<d.getX()<<" = "<<d.doOp(operator/)<<endl;
	cout<<endl;
	cout<<"=============== *= DOUBLE MATRIX=============="<<endl;
	Matrix<double,2> m; 
	Matrix<double,2> n;
	m[0][0] = 13;
	m[0][1] = 26;
	m[1][0] = 39;
	m[1][1] =13;
	n[0][0] = 3./13;
	n[0][1] = -4./13;
	n[1][0] = -2./13;
	n[1][1] =7./13;
	cout<<endl<<m<<endl;
	cout<<"     *="<<endl;
	cout<<endl<<n<<endl;
	cout<<"     ="<<endl<<endl;
	UniCalc<Wrapper<Matrix<double,2>>,Wrapper<Matrix<double,2>>> c(m,n);
	c.doOp(operator*=);
	cout<<c.getA()<<endl;
	cout<<"=============== + DOUBLE MATRIX=============="<<endl;
	cout<<endl<<c.getA()<<endl;
	cout<<"     +"<<endl;
	cout<<endl<<n<<endl;
	cout<<"     ="<<endl;
	cout<<endl<<c.doOp(operator+)<<endl;
	Matrix<AComplex,5> m1;
	Matrix<AComplex,5> n1;
	UniCalc<Wrapper<Matrix<AComplex,5>>,Wrapper<Matrix<AComplex,5>>> c1(m1,n1);
	cout<<"=============== - COMPLEX MATRIX=============="<<endl;
	cout<<endl<<m1<<endl;
	cout<<"     -"<<endl;
	cout<<endl<<n1<<endl;
	cout<<"     ="<<endl;
	cout<<endl<<c1.doOp(operator-)<<endl;
	cout<<"=============== += COMPLEX MATRIX=============="<<endl;
	cout<<endl<<m1<<endl;
	cout<<"     +="<<endl;
	cout<<endl<<n1<<endl;
	cout<<"     ="<<endl;
	c1.doOp(operator+=);
	cout<<endl<<c1.getA()<<endl;
	cout<<"===============DOUBLE MATRIX * INT=============="<<endl<<endl;
	Matrix<double,2> y;
	UniCalc<Wrapper<Matrix<double,2>>,Wrapper<int>> z(y,2);
	cout<<y<<endl;
	cout<<"  *   2"<<endl<<endl;
	cout<<z.doOp(operator*)<<endl;
	cout<<"===============ACOMPLEX MATRIX *= DOUBLE=============="<<endl<<endl;
	Matrix<AComplex,3> g;
	UniCalc<Wrapper<Matrix<AComplex,3>>,Wrapper<int>> k(g,3);
	cout<<g<<endl;
	cout<<"  *=   3"<<endl<<endl;
	k.doOp(operator*=);
	cout<<k.getA()<<endl;
	cout<<"===============ACOMPLEX MATRIX + INT MATRIX=============="<<endl<<endl;
	Matrix<AComplex,3> f;
	Matrix<int,3> h;
	UniCalc<Wrapper<Matrix<AComplex,3>>,Wrapper<Matrix<int,3>>> o(f,h);
	cout<<o.getA()<<endl;
	cout<<"       +"<<endl<<endl;
	cout<<o.getX()<<endl;
	cout<<"       ="<<endl<<endl;
	cout<<o.doOp(operator+)<<endl;
	cout<<"===============DOUBLE MATRIX - INT MATRIX=============="<<endl<<endl;
	Matrix<double,3> f1;
	Matrix<int,3> h1;
	UniCalc<Wrapper<Matrix<double,3>>,Wrapper<Matrix<int,3>>> o1(f1,h1);
	cout<<o1.getA()<<endl;
	cout<<"       -"<<endl<<endl;
	cout<<o1.getX()<<endl;
	cout<<"       ="<<endl<<endl;
	cout<<o1.doOp(operator-)<<endl;*/
	Matrix<AComplex,3> f1;
	Matrix<int,3> h1;
	UniCalc<Wrapper<Matrix<AComplex,3>>,Wrapper<Matrix<int,3>>> o1(f1,h1);
	return 0;
}